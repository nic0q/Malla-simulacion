{"version":3,"sources":["components/BotonNivel.jsx","components/Ramo.jsx","components/BotonAnio.jsx","components/AvanceCarrera.jsx","components/Malla.jsx","App.js","reportWebVitals.js","index.js"],"names":["BotonNivel","_ref","nivel","handleClick","react_default","a","createElement","onClick","className","num","roman","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","str","_i","_Object$keys","Object","keys","length","i","q","Math","floor","repeat","convertToRoman","Ramo","name","abrev","tipo","estado","aprob","concat","alt","src","BotonAnio","año","AvanceCarrera","n_aprobadas","n_total","Number","toFixed","COLORFULL_TYPES","MBI","ING","INF-BDD","INF","ELE","TOP","OPC","NORMAL_COLORS","DISP","APRO","PEND","PRIDE_COLORS","1","2","3","4","5","6","VERBOSE","LOA","PRIDE","get_disponibles","aprobados","nombre","disp","ramos_civil","filter","ramo","prereq","includes","is_subset","map","push","get_ramos_afectados","ramo_inicio","acum","el","flat","array1","array2","every","element","update_disponibles","aprov","toConsumableArray","ramo_disp","update_aprobados","Malla","_useState","useState","_useState2","slicedToArray","disponibles","set_disponibles","_useState3","_useState4","set_aprobados","_useState5","_useState6","colorfull","set_colorfull","ramo_click","nivel_click","get_estado_ramo","Nivel","key","state","0","Array","fill","_","toString","anioa","anio_click","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.11876dbe.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default function BotonNivel({nivel, handleClick}){\r\n  function convertToRoman(num) {\r\n    const roman = {\r\n      M: 1000,\r\n      CM: 900,\r\n      D: 500,\r\n      CD: 400,\r\n      C: 100,\r\n      XC: 90,\r\n      L: 50,\r\n      XL: 40,\r\n      X: 10,\r\n      IX: 9,\r\n      V: 5,\r\n      IV: 4,\r\n      I: 1\r\n    }\r\n    let str = '';\r\n    for (let i of Object.keys(roman)) {\r\n      const q = Math.floor(num / roman[i]);\r\n      num -= q * roman[i];\r\n      str += i.repeat(q);\r\n    }\r\n    return str;\r\n  }\r\n  return <p onClick={()=>handleClick(nivel)} className=\"bg-gray-500 w-36 h-10 mb-6 pt-2 text-white hover:bg-white hover:text-black\">{convertToRoman(nivel)}</p>\r\n}","import React from \"react\";\r\nexport default function Ramo({name, abrev, tipo, estado , handleClick, aprob}){   \r\n  return <div onClick={handleClick} className= {`flex flex-col w-32 h-32 mb-2 mx-2 rounded-lg ${tipo} ${estado}`}>\r\n    {aprob ? <img className=\"fixed w-32\" alt=\"aprob\" src=\"https://logodix.com/logo/1317798.png\"></img> : \"\"}\r\n    <div className=\"bg-black text-white\"> \r\n      <p>{abrev}</p>\r\n    </div>\r\n    <div className=\"flex items-center justify-center px-2.5\">\r\n      <br /><br /><br /><br />\r\n      <p>{name}</p>\r\n    </div>\r\n  </div>\r\n}","import React from \"react\";\r\nexport default function BotonAnio({año, handleClick}){\r\n  return <div onClick={()=>handleClick(año)}>\r\n    <p className=\"w-72 fixed bg-gray-200 hover:bg-gray-400\">Año {año}</p>  \r\n    </div>\r\n}","import React from \"react\";\r\nexport default function AvanceCarrera({n_aprobadas, n_total}){\r\n  return <div className=\" text-white mt-16\">\r\n    <h1>Avance de {(Number(n_aprobadas)*100/Number(n_total)).toFixed(2)}%</h1>\r\n    <h3>{n_aprobadas} / {n_total}</h3>\r\n  </div>\r\n}","import ramos_civil from \"../ramos_civil.json\"\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport BotonNivel from \"./BotonNivel.jsx\";\r\nimport Ramo from \"./Ramo.jsx\"\r\nimport BotonAnio from \"./BotonAnio\";\r\nimport AvanceCarrera from \"./AvanceCarrera\";\r\n\r\nconst COLORFULL_TYPES = {\r\n  'MBI': 'bg-blue-500',\r\n  'ING': 'bg-blue-600',\r\n  'INF-BDD': 'bg-green-300',\r\n  'INF': 'bg-green-400',\r\n  'ELE': 'bg-red-400',\r\n  'TOP': 'bg-purple-500',\r\n  'OPC': 'bg-yellow-400',\r\n}\r\n\r\nconst NORMAL_COLORS = {\r\n  'DISP': \"bg-yellow-500\",\r\n  'APRO': \"bg-green-500\",\r\n  'PEND': \"bg-gray-300\",\r\n}\r\nconst PRIDE_COLORS = {\r\n  1:'bg-[#5D308F]',\r\n  2:'bg-[#1281D0]',\r\n  3:'bg-[#59B665]',\r\n  4:'bg-[#EBE51F] text-black',\r\n  5:'bg-[#F08F1E]',\r\n  6:'bg-[#D61E1E]'\r\n}\r\n\r\nconst VERBOSE = 0\r\nconst LOA = 1\r\nconst PRIDE = 2\r\n/* No estoy seguro si es una mejor practica hacer un diccionario o hacer constantes como en C\r\n// const SKIN_TYPES = {\r\n//   VERBOSE: 0,\r\n//   LOA: 1,\r\n//   PRIDE: 2,\r\n// }\r\n// const COLORES_ESTADO = {\r\n//   'DISP': \"bg-yellow-500\",\r\n//   'APRO': \"bg-green-400\",\r\n// }\r\n*/\r\n// Funcion que obtiene los ramos_civil disponibles (Que pueden ser tomados) para el ramo actual\r\nconst get_disponibles = (aprobados, nombre) => {\r\n  const disp = []\r\n  ramos_civil.filter(ramo => ramo.prereq.includes(nombre)).filter(ramo => is_subset(aprobados,ramo.prereq)).map(ramo => disp.push(ramo.nombre))\r\n  return disp\r\n}\r\n// Función que obtiene todos los ramos afectados a raíz de uno (concepo de transitividad)\r\nconst get_ramos_afectados = (ramo_inicio) => {\r\n  let name = [ramo_inicio], acum = []\r\n  while(name.length){ // Mientras haya ramos afectados\r\n    name = name.map(el => ramos_civil.filter(ramo => ramo.prereq.includes(el))).flat().map(ramo => ramo.nombre)\r\n    acum = acum.concat(name)\r\n  }\r\n  return acum\r\n}\r\n// Funcion que determina si arreglo 1 es subconjunto de arreglo2 (Se encuentran todos sus elementos)\r\nconst is_subset = (array1, array2) => array2.every((element) => array1.includes(element))\r\n// Función que actualiza los ramos disponnibles en la malla en caso de seleccione o deseleccione un recuadro\r\nconst update_disponibles = (aprov, ramo, disp) => {\r\n  if(is_subset(disp,get_disponibles([...aprov, ramo.nombre], ramo.nombre))){ // Si los ramos que se quiere agregar ya se encuentran mostrandose en la malla se eliminan de la lista de disponibles\r\n    return disp.filter((ramo_disp) => (ramo_disp === ramo.nombre || !get_ramos_afectados(ramo.nombre).includes(ramo_disp)) );\r\n  }\r\n  return disp.concat(get_disponibles([...aprov, ramo.nombre], ramo.nombre)) // Si no, se agregan\r\n}\r\n// Actualiza los ramos aprobados en la malla, en caso se deseleccione un recuadro o se añada uno\r\nconst update_aprobados = (aprov, ramo) => {\r\n  if(aprov.includes(ramo.nombre)){  // Si se quiere deseleccionar un ramo aprobado y ya esta en la malla se elimina de la lista de aprobados\r\n    return aprov.filter((el) => (el !== ramo.nombre && !get_ramos_afectados(ramo.nombre).includes(el)));\r\n  }\r\n  return aprov.concat(ramo.nombre)  // Si no, se agrega\r\n}\r\nexport default function Malla(){\r\n  const [disponibles, set_disponibles] = useState([])\r\n  const [aprobados, set_aprobados] = useState([])\r\n  const [colorfull, set_colorfull] = useState(0)\r\n  // Funcion que actualiza la malla al hacer click en un ramo, ya se aprobando un ramo y abriendo ramos a raiz de la aprobacion\r\n  const ramo_click = (ramo) => {\r\n    if(is_subset(aprobados,ramo.prereq))\r\n      set_aprobados((aprov)=>{\r\n        set_disponibles((disp)=>update_disponibles(aprov, ramo, disp))\r\n        return update_aprobados(aprov, ramo)})\r\n  }\r\n  // Función que actualiza el nivel entero de la malla, utilizando la función de ramo_click\r\n  const nivel_click = (nivel) => {\r\n    ramos_civil.filter(ramo => ramo.nivel === nivel).map(ramo => ramo_click(ramo))\r\n  }\r\n  const anio_click = (nivel) => {\r\n    const anioa = [nivel,(Number(nivel)+1).toString()]\r\n    nivel_click(anioa[0])\r\n    nivel_click(anioa[1])\r\n  }\r\n  const get_estado_ramo = (ramo, aprobados, disponibles) =>{\r\n    if(aprobados.includes(ramo.nombre)) return NORMAL_COLORS[\"APRO\"]\r\n    if(disponibles.includes(ramo.nombre) || !ramo.prereq.length) return NORMAL_COLORS[\"DISP\"]\r\n  }\r\n  const Nivel = ({nivel}) =>{\r\n    return <div>\r\n      <BotonNivel handleClick={()=>nivel_click (nivel)} nivel = {nivel}/>\r\n      {ramos_civil.map(ramo => {\r\n      return ramo.nivel === nivel ?\r\n        <Ramo\r\n          handleClick = {()=>ramo_click(ramo)}\r\n          key = {ramo.abrev}\r\n          // aprobados.includes(ramo.nombre) ? \"bg-green-300\": disponibles.includes(ramo.nombre) || !ramo.prereq.length ? \"text-white\" : \"opacity-60\"\r\n          tipo = {colorfull === VERBOSE ?\r\n            (COLORFULL_TYPES[ramo.tipo]) :\r\n              colorfull === LOA ? (get_estado_ramo(ramo, aprobados, disponibles) || NORMAL_COLORS[\"PEND\"]) :\r\n                colorfull === PRIDE ? (nivel % 2 === 0 ? PRIDE_COLORS[nivel/2] : PRIDE_COLORS[(((nivel-1)/2)+1)])\r\n                : \"\"}\r\n          // tipo = {nivel%2 ===0 ?  PRIDE_COLORS[nivel/2] : PRIDE_COLORS[(((nivel-1)/2)+1)]}\r\n          estado = {\r\n            colorfull === 0 || colorfull === 2 ?\r\n              aprobados.includes(ramo.nombre) ? `shadow-xl shadow-indigo-500 text-white`: disponibles.includes(ramo.nombre) || !ramo.prereq.length ? \"text-white\" : \"opacity-60\"\r\n            : \"\"}\r\n          abrev = {ramo.abrev}\r\n          aprob = {aprobados.includes(ramo.nombre) && colorfull !== LOA ? true : false}\r\n          name={ramo.nombre}/> : \"\"})\r\n      }\r\n    </div>\r\n  }\r\n  return <div>\r\n    <div className=\"text-white flex justify-end\" onClick={()=>set_colorfull((state)=>{if(state === 2) return 0; else return state + 1})}>      \r\n      <button className=\"\">\r\n      Cambiar aspecto\r\n      <div className=\"border-2 border-white p-1 hover:bg-white hover:text-black\">\r\n        {{0:\"Verbose 🗣️\",1:\"LOA 📘\",2: \"Pride 🌈\"}[colorfull]}\r\n      </div>\r\n      \r\n      </button>\r\n    </div>\r\n  <div className=\"flex col text-center align-middle justify-center\">\r\n    {Array(11).fill().map((_,nivel) => { nivel = nivel + 1\r\n      return <div key = {nivel.toString()}>\r\n        {(nivel+1)%2 === 0 ?\r\n        <div>\r\n          <br></br>\r\n          <BotonAnio handleClick={()=>anio_click(nivel.toString())} año = {(((nivel-1)/2)+1)}/>\r\n        </div>\r\n        :<br></br>}\r\n        <br></br>\r\n        <Nivel nivel={nivel.toString()}/>\r\n      </div>\r\n      })\r\n    }\r\n    </div>\r\n    <AvanceCarrera n_aprobadas={aprobados.length} n_total={ramos_civil.length}/>  \r\n    </div>\r\n}","import './App.css';\nimport Malla from './components/Malla';\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <div className=\"App bg-stone-900 h-screen flex align-middle items-center justify-center\">\n      <Malla></Malla>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}